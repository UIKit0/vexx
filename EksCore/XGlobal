#ifndef XGLOBAL_H
#define XGLOBAL_H

#define QT_USE_FAST_CONCATENATION
#define QT_USE_FAST_OPERATOR_PLUS

#ifdef _MSC_VER
# pragma warning(disable: 4640) /* construction of local static object is not thread-safe */
# pragma warning(disable: 4548) /* expression before comma has no effect; expected expression with side-effect */
# pragma warning(disable: 4619) /* #pragma warning : there is no warning number ... */
# pragma warning(disable: 4555) /* reinterpret_cast unsafe */
# pragma warning(disable: 4191) /* reinterpret_cast unsafe */
# pragma warning(disable: 4548) /* expression with no effect */
# pragma warning(disable: 4702) /* unreachable code */
# pragma warning(disable: 4181) /* qualifier applied to reference type */
# pragma warning(disable: 4946) /* reinterpret_cast used between related classes: '...' and '...') */
# pragma warning(disable: 4345) /* behavior change: an object of POD type constructed with an initializer of the form () will be default-initialized */
#endif

#include "QtGlobal"
#include "cstdlib"
#include "cmath"
#include "Eigen/Core"

#define X_DECL_EXPORT Q_DECL_EXPORT
#define X_DECL_IMPORT Q_DECL_IMPORT

#ifdef EKSCORE_BUILD
# define EKSCORE_EXPORT X_DECL_EXPORT
#else
# define EKSCORE_EXPORT X_DECL_IMPORT
#endif

#define X_ALIGNED_OPERATOR_NEW EIGEN_MAKE_ALIGNED_OPERATOR_NEW
#define X_ALIGN_BYTE_COUNT 16
#define X_ROUND_TO_ALIGNMENT(type, exp) X_ROUND_TO_SPECIFIC_ALIGNMENT(type, exp, X_ALIGN_BYTE_COUNT)
#define X_ROUND_TO_SPECIFIC_ALIGNMENT(type, exp, align) ((type)((xuint8*)exp + ((ptrdiff_t)align - (((ptrdiff_t)exp)&((ptrdiff_t)align-1)))))
#define xAssertIsAligned(ptr) xAssertIsSpecificAligned(ptr, X_ALIGN_BYTE_COUNT)
#define xAssertIsSpecificAligned(ptr, alignment) xAssert((alignment > 0) || (((xsize)(ptr)&(alignment-1)) == 0))

#ifndef QT_NO_DEBUG
# define X_DEBUG
#endif

#ifdef X_DEBUG
# define X_PROFILING_ENABLED
# define X_ASSERTS_ENABLED 1
#endif

typedef signed char xint8;         /* 8 bit signed */
typedef unsigned char xuint8;      /* 8 bit unsigned */
typedef short xint16;              /* 16 bit signed */
typedef unsigned short xuint16;    /* 16 bit unsigned */
typedef int xint32;                /* 32 bit signed */
typedef unsigned int xuint32;      /* 32 bit unsigned */
typedef size_t xsize;
typedef ptrdiff_t xptrdiff;

#if defined(Q_OS_WIN) && !defined(Q_CC_GNU) && !defined(Q_CC_MWERKS)
#  define X_INT64_C(c) c ## i64    /* signed 64 bit constant */
#  define X_UINT64_C(c) c ## ui64   /* unsigned 64 bit constant */
typedef __int64 xint64;            /* 64 bit signed */
typedef unsigned __int64 xuint64;  /* 64 bit unsigned */
#else
#  define X_INT64_C(c) static_cast<long long>(c ## LL)     /* signed 64 bit constant */
#  define X_UINT64_C(c) static_cast<unsigned long long>(c ## ULL) /* unsigned 64 bit constant */
typedef long long xint64;           /* 64 bit signed */
typedef unsigned long long xuint64; /* 64 bit unsigned */
#endif

inline void xNoop() { }

#define X_SIZE_SENTINEL (xsize)-1
#define X_UINT64_SENTINEL (xuint64)-1
#define X_UINT32_SENTINEL (xuint32)-1

#define X_ARRAY_COUNT(x) (sizeof(x)/sizeof(x[0]))

#define XProfileScope 1
#define XProfileFunction XProfileFunctionBase(XProfileScope)
#define XProfileFunctionScopedBlock(mess) XProfileScopedBlockBase(XProfileScope, mess)

#endif // XGLOBAL_H
